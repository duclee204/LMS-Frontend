import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { ApiService } from './api.service';
import { Module, CreateModuleRequest, UpdateModuleRequest } from '../models/module.model';

@Injectable({
  providedIn: 'root'
})
export class ModulesApiService {

  constructor(private apiService: ApiService) { }

  /**
   * T·∫°o module m·ªõi cho m·ªôt kh√≥a h·ªçc
   * @param courseId ID c·ªßa kh√≥a h·ªçc
   * @param moduleData D·ªØ li·ªáu module c·∫ßn t·∫°o
   * @returns Observable<any> response object t·ª´ server
   */
  createModule(courseId: number, moduleData: CreateModuleRequest): Observable<any> {
    console.log('üöÄ Creating module for courseId:', courseId);
    console.log('üöÄ Module data:', moduleData);
    console.log('üöÄ API URL:', `/modules/${courseId}`);
    
    return this.apiService.post<any>(`/modules/${courseId}`, moduleData);
  }

  /**
   * L·∫•y danh s√°ch modules c·ªßa m·ªôt kh√≥a h·ªçc
   * @param courseId ID c·ªßa kh√≥a h·ªçc
   * @returns Observable<Module[]> danh s√°ch modules
   */
  getModulesByCourse(courseId: number): Observable<Module[]> {
    return this.apiService.get<Module[]>(`/modules/${courseId}`);
  }

  /**
   * C·∫≠p nh·∫≠t th√¥ng tin module
   * @param moduleId ID c·ªßa module
   * @param moduleData D·ªØ li·ªáu module c·∫ßn c·∫≠p nh·∫≠t
   * @returns Observable<string> th√¥ng b√°o th√†nh c√¥ng
   */
  updateModule(moduleId: number, moduleData: UpdateModuleRequest): Observable<string> {
    return this.apiService.put<string>(`/modules/${moduleId}`, moduleData);
  }

  /**
   * X√≥a module
   * @param moduleId ID c·ªßa module c·∫ßn x√≥a
   * @param courseId ID c·ªßa kh√≥a h·ªçc (ƒë·ªÉ check quy·ªÅn)
   * @returns Observable<string> th√¥ng b√°o th√†nh c√¥ng
   */
  deleteModule(moduleId: number, courseId: number): Observable<string> {
    return this.apiService.delete<string>(`/modules/${moduleId}?courseId=${courseId}`);
  }
}
